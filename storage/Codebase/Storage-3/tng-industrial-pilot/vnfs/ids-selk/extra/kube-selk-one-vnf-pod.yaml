apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: sm-pilot-dev
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-selk.yaml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: elasticsearch
    name: elasticsearch
  spec:
    ports:
    - name: "9200"
      port: 9200
      targetPort: 9200
    - name: "9300"
      port: 9300
      protocol: UDP
      targetPort: 9300
    selector:
      io.kompose.service: elasticsearch
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-selk.yaml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: kibana
    name: kibana
  spec:
    ports:
    - name: "5601"
      port: 5601
      targetPort: 5601
    selector:
      io.kompose.service: kibana
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-selk.yaml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: elasticsearch
    name: elasticsearch
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: elasticsearch
      spec:
        containers:
        - env:
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          - name: bootstrap.memory_lock
            value: "true"
          - name: discovery.type
            value: single-node
          image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
          name: elasticsearch
          ports:
          - containerPort: 9200 # for REST API
          - containerPort: 9300 # for Nodes communicate
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: esdata
        restartPolicy: Always
        volumes:
        - name: esdata
          persistentVolumeClaim:
            claimName: esdata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: esdata
    name: esdata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-selk.yaml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: kibana
    name: kibana
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: kibana
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_URL
            value: '"http://localhost:9200"'
          image: docker.elastic.co/kibana/kibana:7.4.2
          name: kibana
          ports:
          - containerPort: 5601
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-selk.yaml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: logstash
    name: logstash
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: logstash
      spec:
        containers:
        - env:
          - name: PIPELINE_WORKERS
            value: '"2"'
          - name: xpack.monitoring.elasticsearch.url
            value: '"http://localhost:9200"'
          image: arocha/logstash:7.4.2
          name: logstash
          resources: {}
          volumeMounts:
          - mountPath: /usr/share/logstash/pipeline
            name: lsdata
        restartPolicy: Always
        volumes:
        - name: lsdata
          persistentVolumeClaim:
            claimName: lsdata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: lsdata
    name: lsdata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-selk.yaml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: suricata-ids
    name: suricata-ids
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: suricata-ids
      spec:
        containers:
        - image: arocha/ce7suricata:4.1.2
          name: suricata
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

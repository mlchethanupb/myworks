input {
  beats {
    port => 5044
    #codec => "json"
    #type => "SuricataIDPS"
    }
  }

filter {
  mutate {
    add_field => { "[@metadata][source]" => "${SMB_CLIENT_NAME}" }
    add_field => { "[@metadata][user]" => "${SMB_USER_NAME}" }
    add_field => { "[@metadata][elastichost]" => "${ELASTICSEARCH_HOSTS}" }
    }
  mutate {
    uppercase => [ "[@metadata][source]" ]
    }
  json {
    source => "message"
    target => "temp"
    }
  if [temp][event_type] {
    if [temp][event_type] == "smb" {
      if (([temp][smb][command] == "SMB2_COMMAND_SESSION_SETUP") or ([temp][smb][command] == "SMB1_COMMAND_SESSION_SETUP_ANDX")) and [temp][smb][ntlmssp] {
        if [temp][smb][ntlmssp][user] == [@metadata][user] {
          if [temp][smb][ntlmssp][host] == [@metadata][source] {
            drop {}
            }
          else {
            json {
              source => "message"
              target => "message"
              }
            }
          }
        else {
          json {
            source => "message"
            target => "message"
            }
          }
        }
      else {
        if (([temp][smb][command] == "SMB1_COMMAND_TRANS"))
          {
          mutate {
            add_tag => [ "login" ]
            }
          json {
            source => "message"
            target => "message"
            }
          }
        else {
          drop {}
          }
        }
      }
    else {
      if [temp][event_type] == "dns" or [temp][event_type] == "stats" or [temp][event_type] == "http" or [temp][event_type] == "fileinfo" {
        drop {}
        }
      else {
        if ([temp][event_type] == "flow") and (([temp][dest_port] == 445) or ([temp][dest_port] == 139)) {
          if ([temp][app_proto] == "smb") and ([temp][flow][reason] == "timeout") {
            drop {}
            }
          else {
            mutate {
              add_tag => [ "protocols" ]
              }
            json {
              source => "message"
              target => "message"
              }
            }
          }
        else {
          drop {}
          }
        }
      }
    }
  else {
    drop {}
    }
  }

output {
  if "login" not in [tags] {
    elasticsearch {
      hosts => ["${ELASTICSEARCH_HOSTS}"]
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
      manage_template => false
      document_type => "%{[@metadata][type]}"
      }
    file {
      path => "/usr/share/logstash/logs/event-%{+YYYY-MM-dd-HH-mm-ss}.json"
      codec => line { format => "%{message}" }
      }
    }
  if "protocols" not in [tags] {
    file {
      path => "/usr/share/logstash/logs/login-%{+YYYY-MM-dd-HH-mm-ss}.log"
      codec => line { format => "%{message}" }
      }
    }
  stdout { codec => rubydebug }
  }


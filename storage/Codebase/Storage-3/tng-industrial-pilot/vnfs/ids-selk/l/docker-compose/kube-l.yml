apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-l.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: logstash
    name: logstash
  spec:
    ports:
    - name: "5044"
      port: 5044
      targetPort: 5044
    - name: "9600"
      port: 9600
      targetPort: 9600
    selector:
      io.kompose.service: logstash
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-l.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: logstash
    name: logstash
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: logstash
      spec:
        containers:
        - env:
          - name: 'http.host '
            value: ' "0.0.0.0"'
          - name: 'xpack.monitoring.elasticsearch.url '
            value: ' http://localhost:9200'
          - name: 'xpack.monitoring.enabled '
            value: ' true'
          image: docker.elastic.co/logstash/logstash:7.4.2
          name: logstash
          ports:
          - containerPort: 5044
          - containerPort: 9600
          resources: {}
          volumeMounts:
          - mountPath: /usr/share/logstash/config/logstash.yml
            name: logstash-claim0
        restartPolicy: Always
        volumes:
        - name: logstash-claim0
          persistentVolumeClaim:
            claimName: logstash-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: logstash-claim0
    name: logstash-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

